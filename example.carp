(load "clig.carp")

(def b (Clig.bool-flag @"bool"
                       (Maybe.Just @"b")
                       @"false"
                       @"Whether or not to do something"))
(def s (Clig.string-flag @"strr" (Maybe.Just @"s") @"" @"some kind of string"))
(def i (Clig.int-flag @"intr" (Maybe.Nothing) @"" @"some kind of int"))
(def p (Clig.new @"my-program" @"doesn't do anything interesting"))

(defn main []
  (do (Clig.add-flags &p [@&b @&s @&i])
      (match (Clig.parse &p false)
        (Result.Error err) 
          (do (IO.println &(String.concat &[@"last error encountered: " (str err)]))
              (IO.println &(String.concat &[@"all errors: "
                                           (Clig.get-errors-string &p)])))
        (Result.Success _)
          (do (IO.println "success")
              (IO.println &(str (CligProgram.args &p)))
              (IO.println &(str (CligProgram.name &p)))
              (IO.println &(str (CligProgram.flags &p)))
              (IO.println (CligFlag.value &(unsafe-from (Clig.get-flag &p "bool"))))
              (IO.println &(str &(Clig.get-flag &p "carp")))
              (IO.println &(Clig.get &p "bool"))
              (IO.println &(Clig.get &p "carp"))
              (IO.println &(str (CligProgram.errors &p)))
              (IO.println &(Clig.usage &p))))))
